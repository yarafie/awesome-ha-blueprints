# Blueprint metadata
blueprint:
  name: Controller - Aqara DJT11LM Vibration Sensor
  description: |
    # Controller - Aqara DJT11LM Vibration Sensor

    Controller automation for executing any kind of action triggered by the provided Aqara DJT11LM Vibration Sensor.
    Supports Zigbee2MQTT.

    Automations created with this blueprint can be connected with one or more [Hooks](https://yarafie.github.io/awesome-ha-blueprints/docs/blueprints/hooks) supported by this controller.
    Hooks allow to easily create controller-based automations for interacting with media players, lights, covers and more.
    See the list of [Hooks available for this controller](https://yarafie.github.io/awesome-ha-blueprints/docs/blueprints/controllers/aqara_djt11lm#available-hooks) for additional details.

    ## More Info

    ℹ️ Version 2025.10.30
    📝 [Changelog](https://yarafie.github.io/awesome-ha-blueprints/docs/blueprints/controllers/aqara_djt11lm/#changelog)
    📕 Full documentation regarding this blueprint is available [here](https://yarafie.github.io/awesome-ha-blueprints/docs/blueprints/controllers/aqara_djt11lm).

    🚀 This blueprint is part of the **[Awesome HA Blueprints](https://yarafie.github.io/awesome-ha-blueprints) project**. Please consider **[leaving a star on GitHub](https://github.com/EPMatt/awesome-ha-blueprints)**! 🌟

  source_url: https://github.com/yarafie/awesome-ha-blueprints/blob/main/blueprints/controllers/aqara_djt11lm/aqara_djt11lm.yaml
  domain: automation
  homeassistant:
    min_version: 2024.10.0
  # Device Selector
  input:
    controller_device:
      name: (Required) (Zigbee2MQTT) Controller Device
      description: The controller device to use for the automation. Choose a value only if the remote is integrated with deCONZ, ZHA, Zigbee2MQTT.
      default: ''
      selector:
        # source: https://zigbee.blakadder.com/Aqara_DJT11LM.html
        device:
          filter:
            # source: https://www.zigbee2mqtt.io/devices/DJT11LM.html
            - integration: mqtt
              manufacturer: Aqara
              model: Vibration sensor
            # For backwards compatability with z2m 1.x. model_id is added to end of model rather than a seperate attribute in z2m 2.x
            - integration: mqtt
              manufacturer: Aqara
              model: Vibration sensor (DJT11LM)
          multiple: false
    # inputs for custom actions
    ## inputs switch mode selection
    device_sensitivy_section:
      name: Device Sensitivity Options
      icon: mdi:remote
      collapsed: true
      input:
        device_sensitivty:
          name: (Optional) Set the sensitivity of device
          description: The sensitivity for the device
          default: medium
          selector:
            select:
              options:
                - label: High Sensitivity
                  value: high
                - label: Medium Sensitivity
                  value: medium
                - label: Low Sensitivity
                  value: low
              mode: dropdown
    ## inputs for device actions
    action_device_vibrate:
      name: (Optional) Device detects vibration
      description: Action to run when device detects vibration.
      default: []
      selector:
        action:
    action_device_tilt:
      name: (Optional) Device detects being tilted
      description: Action to run when device detects being tilted.
      default: []
      selector:
        action:
    action_device_drop:
      name: (Optional) Device detects drop
      description: Action to run when device detects being dropped.
      default: []
      selector:
        action:
# Automation schema
variables:
  # Controller ID
  controller_id: !input controller_device
  # integration id used to select items in the action mapping
  # integration type is set from trigger.id
  integration_id: '{{ trigger.id.split("-")[0] }}'
  # convert input tags to variables, to be used in templates
  device_sensitivity: !input device_sensitivity
  # mapping between actions and integrations
  actions_mapping:
    z2m:
      # source: https://www.zigbee2mqtt.io/devices/WXKG13LM.html
      device_vibrate: [vibrate]
      device_tilt: [tilt]
      device_drop: [drop]
  # pre-choose actions for buttons based on configured integration
  # no need to perform this task at automation runtime
  device_vibrate: '{{ actions_mapping[integration_id]["device_vibrate"] }}'
  device_tilt: '{{ actions_mapping[integration_id]["device_tilt"] }}'
  device_drop: '{{ actions_mapping[integration_id]["device_drop"] }}'
#
# Mode Block
mode: single
max_exceeded: silent
#
# Triggers Block
triggers:
  # triggers for zigbee2mqtt mqtt device action
  - trigger: device
    id: z2m-device-vibrate
    domain: mqtt
    device_id: !input controller_device
    type: action
    subtype: vibrate
  - trigger: device
    id: z2m-device-tilt
    domain: mqtt
    device_id: !input controller_device
    type: action
    subtype: tilt
  - trigger: device
    id: z2m-device-drop
    domain: mqtt
    device_id: !input controller_device
    type: action
    subtype: drop
#
# Conditions Block
conditions:
  - condition: and
    conditions:
      # check that the button event is not empty
      - >-
        {%- set trigger_action -%}
        {%- if integration_id == "z2m" -%}
        {{ trigger.payload }}
        {%- endif -%}
        {%- endset -%}
        {{ trigger_action not in ["","None","unknown"] }}
#
# Actions Block
actions:
  # Set the device to the selected sensitivity
  - action: mqtt.publish
    data:
      topic: zigbee2mqtt/{{ device_attr(controller_id, 'name') }}/set
      payload: '{""sensitivity":" {{ device_sensitivity }}}'
  #
  # choose the sequence to run based on the received device event
  - choose:
      #
      # Actions for Device Vibrate
      - conditions:
          - condition: trigger
            id:
              - z2m-device-vibrate
        sequence:
          # run the custom action
          - choose:
              - conditions: []
                sequence: !input action_device_vibrate
      #
      # Actions for Device Vibrate
      - conditions:
          - condition: trigger
            id:
              - z2m-device-tilt
        sequence:
          # run the custom action
          - choose:
              - conditions: []
                sequence: !input action_device_tilt
      #
      # Actions for Device Drop
      - conditions:
          - condition: trigger
            id:
              - z2m-device-drop
        sequence:
          # run the custom action
          - choose:
              - conditions: []
                sequence: !input action_device_drop
