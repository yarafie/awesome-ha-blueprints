"use strict";(self.webpackChunkawesome_ha_blueprints_website=self.webpackChunkawesome_ha_blueprints_website||[]).push([[1996],{5339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"blueprints/controllers/ikea_e2123","title":"Controller - IKEA E2123 SYMFONISK sound remote, gen 2","description":"Controller automation for executing any kind of action triggered by the provided IKEA E2123 SYMFONISK sound remote, gen 2. Supports Zigbee2MQTT, ZHA, deCONZ.","source":"@site/docs/blueprints/controllers/ikea_e2123.mdx","sourceDirName":"blueprints/controllers","slug":"/blueprints/controllers/ikea_e2123","permalink":"/awesome-ha-blueprints/docs/blueprints/controllers/ikea_e2123","draft":false,"unlisted":false,"editUrl":"https://github.com/yarafie/awesome-ha-blueprints/edit/main/docs/blueprints/controllers/ikea_e2123.mdx","tags":[],"version":"current","frontMatter":{"title":"Controller - IKEA E2123 SYMFONISK sound remote, gen 2","description":"Controller automation for executing any kind of action triggered by the provided IKEA E2123 SYMFONISK sound remote, gen 2. Supports Zigbee2MQTT, ZHA, deCONZ."}}');var s=t(7557),i=t(7389),r=t(5561);const l={title:"Controller - IKEA E2123 SYMFONISK sound remote, gen 2",description:"Controller automation for executing any kind of action triggered by the provided IKEA E2123 SYMFONISK sound remote, gen 2. Supports Zigbee2MQTT, ZHA, deCONZ."},a=void 0,d={},c=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Available Hooks",id:"available-hooks",level:2},{value:"Light",id:"light",level:3},{value:"(Default) Mapping",id:"default-mapping",level:4},{value:"Media Player",id:"media-player",level:3},{value:"(Default) Mapping",id:"default-mapping-1",level:4},{value:"Cover",id:"cover",level:3},{value:"(Default) Mapping",id:"default-mapping-2",level:4},{value:"Additional Notes",id:"additional-notes",level:2},{value:"Dots1 and Dots2 Long/Double press custom actions",id:"dots1-and-dots2-longdouble-press-custom-actions",level:3},{value:"Firmware compatability",id:"firmware-compatability",level:3},{value:"Changelog",id:"changelog",level:2}];function h(e){const n={a:"a",admonition:"admonition",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r._x,{id:"ikea_e2123",category:"controllers"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["This blueprint is part of the ",(0,s.jsx)(n.strong,{children:"Controllers-Hooks Ecosystem"}),". You can read more about this topic ",(0,s.jsx)(n.a,{href:"/docs/controllers-hooks-ecosystem",children:"here"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"This blueprint provides universal support for running any custom action when a button is pressed on the provided IKEA E2123 SYMFONISK sound remote, gen 2. Supports controllers integrated with Zigbee2MQTT, ZHA, deCONZ. The blueprint will automagically detect the integration type and take care of all the rest."}),"\n",(0,s.jsx)(n.p,{children:"The blueprint handles double button press events natively for the dots1/dots2 buttons as it is supported by the controller device itself.\nLong and Double press events can be enabled/disabled for each of the dots1/dots2 buttons to get extra speed in recognizing single press events."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Automations created with this blueprint can be connected with one or more ",(0,s.jsx)(n.a,{href:"/docs/blueprints/hooks",children:"Hooks"})," supported by this controller.\nHooks allow to easily create controller-based automations for interacting with lights, media players, covers and maybe more in the future. See the list of ",(0,s.jsx)(n.a,{href:"/docs/blueprints/controllers/ikea_e2123#available-hooks",children:"Hooks available for this controller"})," for additional details."]})}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsx)(r.Kg,{id:"zigbee2mqtt"}),"\n",(0,s.jsx)(r.Kg,{id:"zha"}),"\n",(0,s.jsx)(r.Kg,{id:"deconz"}),"\n",(0,s.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,s.jsx)(r.G0,{category:"controllers",id:"ikea_e2123"}),"\n",(0,s.jsx)(n.h2,{id:"available-hooks",children:"Available Hooks"}),"\n",(0,s.jsx)(n.h3,{id:"light",children:"Light"}),"\n",(0,s.jsx)(n.p,{children:"This Hook blueprint allows to build a controller-based automation to control a light. Supports brightness and color control both for white temperature and rgb lights."}),"\n",(0,s.jsx)(n.h4,{id:"default-mapping",children:"(Default) Mapping"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Center button short press -> Toggle"}),"\n",(0,s.jsx)(n.li,{children:"Up button short press -> Brightness up"}),"\n",(0,s.jsx)(n.li,{children:"Up button long press -> Brightness up (continuous, until release)"}),"\n",(0,s.jsx)(n.li,{children:"Down button short press -> Brightness down"}),"\n",(0,s.jsx)(n.li,{children:"Down button long press -> Brightness down (continuous, until release)"}),"\n",(0,s.jsx)(n.li,{children:"Right button short press -> Color up"}),"\n",(0,s.jsx)(n.li,{children:"Left button short press -> Color down"}),"\n",(0,s.jsx)(n.li,{children:"Dots1 button short press -> Turn off"}),"\n",(0,s.jsx)(n.li,{children:"Dots2 button short press -> Turn on"}),"\n",(0,s.jsx)(n.li,{children:"Dots1 button long press -> Color down (continuous, until release)"}),"\n",(0,s.jsx)(n.li,{children:"Dots2 button long press -> Color up (continuous, until release)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/blueprints/hooks/light",children:"Light Hook docs"})}),"\n",(0,s.jsx)(n.h3,{id:"media-player",children:"Media Player"}),"\n",(0,s.jsx)(n.p,{children:"This Hook blueprint allows to build a controller-based automation to control a media player. Supports volume setting, play/pause and track selection."}),"\n",(0,s.jsx)(n.h4,{id:"default-mapping-1",children:"(Default) Mapping"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Center button short press -> Play/Pause"}),"\n",(0,s.jsx)(n.li,{children:"Up button short press -> Volume up"}),"\n",(0,s.jsx)(n.li,{children:"Up button long press -> Volume up (continuous, until release)"}),"\n",(0,s.jsx)(n.li,{children:"Down button short press -> Volume down"}),"\n",(0,s.jsx)(n.li,{children:"Down button long press -> Volume down (continuous, until release)"}),"\n",(0,s.jsx)(n.li,{children:"Right button short press -> Next track"}),"\n",(0,s.jsx)(n.li,{children:"Left button short press -> Prev track"}),"\n",(0,s.jsx)(n.li,{children:"Dots2 button short press -> Toggle"}),"\n",(0,s.jsx)(n.li,{children:"Dots1 button short press -> Stop"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/blueprints/hooks/media_player",children:"Media Player Hook docs"})}),"\n",(0,s.jsx)(n.h3,{id:"cover",children:"Cover"}),"\n",(0,s.jsx)(n.p,{children:"This Hook blueprint allows to build a controller-based automation to control a cover. Supports opening, closing and tilting the cover."}),"\n",(0,s.jsx)(n.h4,{id:"default-mapping-2",children:"(Default) Mapping"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Up button short press -> Open cover"}),"\n",(0,s.jsx)(n.li,{children:"Down button short press -> Close cover"}),"\n",(0,s.jsx)(n.li,{children:"Right button short press -> Open the cover tilt"}),"\n",(0,s.jsx)(n.li,{children:"Left button short press -> Close the cover tilt"}),"\n",(0,s.jsx)(n.li,{children:"Center button short press -> Stop cover and cover tilt"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/blueprints/hooks/cover",children:"Cover Hook docs"})}),"\n",(0,s.jsx)(n.h2,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,s.jsx)(n.h3,{id:"dots1-and-dots2-longdouble-press-custom-actions",children:"Dots1 and Dots2 Long/Double press custom actions"}),"\n",(0,s.jsx)(n.p,{children:"The blueprint handles double button press events natively for the dots1/dots2 buttons as it is supported by the controller device itself.\nLong and Double press events can be enabled/disabled for each of the dots1/dots2 buttons to get extra speed in recognizing single press events."}),"\n",(0,s.jsx)(n.h3,{id:"firmware-compatability",children:"Firmware compatability"}),"\n",(0,s.jsx)(n.p,{children:"This blueprint is only compatible with firmwares 1.0.32 (20221219) and 1.0.35 (20230308) of the IKEA E2123 SYMFONISK sound remote, gen 2."}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"2025-03-01"}),": Initial release. [Initial Release] (",(0,s.jsx)(n.a,{href:"https://github.com/yarafie",children:"@yarafie"}),") ","\ud83c\udf89"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"2025-03-08"}),": Added missing short press actions and fixed some documentation mappings. [issue#66] (",(0,s.jsx)(n.a,{href:"https://github.com/yarafie",children:"@yarafie"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"2025-03-16"}),": Added ability to enable/disable Long/Double Actions for dots buttons. [issue#70] (",(0,s.jsx)(n.a,{href:"https://github.com/yarafie",children:"@yarafie"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"2025-03-20"}),": Standardized input naming format for controller devices and virtual button actions. No functionality changes."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);