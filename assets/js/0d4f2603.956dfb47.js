"use strict";(self.webpackChunkawesome_ha_blueprints_website=self.webpackChunkawesome_ha_blueprints_website||[]).push([[30],{7057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"controllers-hooks-ecosystem","title":"Controllers-Hooks Ecosystem","description":"Introduction","source":"@site/docs/controllers-hooks-ecosystem.mdx","sourceDirName":".","slug":"/controllers-hooks-ecosystem","permalink":"/awesome-ha-blueprints/docs/controllers-hooks-ecosystem","draft":false,"unlisted":false,"editUrl":"https://github.com/EPMatt/awesome-ha-blueprints/edit/main/docs/controllers-hooks-ecosystem.mdx","tags":[],"version":"current","frontMatter":{"title":"Controllers-Hooks Ecosystem"},"sidebar":"docs","previous":{"title":"Importing a Blueprint","permalink":"/awesome-ha-blueprints/docs/importing-a-blueprint"},"next":{"title":"Contributing","permalink":"/awesome-ha-blueprints/docs/contributing"}}');var i=n(4848),r=n(8453);const s={title:"Controllers-Hooks Ecosystem"},l=void 0,a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Controllers",id:"controllers",level:2},{value:"Helper - Last Controller Event Input",id:"helper---last-controller-event-input",level:3},{value:"Virtual Events",id:"virtual-events",level:3},{value:"Hooks",id:"hooks",level:2},{value:"How to build a controller-based automation",id:"how-to-build-a-controller-based-automation",level:2},{value:"Basic Usage: Controller with custom actions",id:"basic-usage-controller-with-custom-actions",level:3},{value:"Controller and Hook",id:"controller-and-hook",level:3},{value:"Controller and Hook + Custom actions",id:"controller-and-hook--custom-actions",level:3},{value:"Controller with multiple Hooks",id:"controller-with-multiple-hooks",level:3},{value:"Examples",id:"examples",level:2},{value:"Control a media player with an IKEA E1743",id:"control-a-media-player-with-an-ikea-e1743",level:3},{value:"Light control with an IKEA E1810 + activate scene with double click",id:"light-control-with-an-ikea-e1810--activate-scene-with-double-click",level:3},{value:"How does it work",id:"how-does-it-work",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"The Controllers-Hooks ecosystem includes a set of blueprints which allow to easily create controller-based automations in just a few clicks. As the name implies, it consists of two main blueprint categories: Controllers and Hooks."}),"\n",(0,i.jsx)(t.h2,{id:"controllers",children:"Controllers"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Controllers"})," are blueprints which allow to easily integrate a wide range of controllers (wall switches, remotes, dimmers, etc.) and use them to run a set of actions when interacting with them. They consist in a practical abstraction layer for building controlled-based automations without worrying about the handling of RAW controller events and the integration used to connect controllers to Home Assistant (Zigbee2MQTT, ZHA, deCONZ, ZWave, proprietary hubs, etc.)."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["The type of exposed events depends on the controller model. Some controllers can also expose virtual events. You can read more about them ",(0,i.jsx)(t.a,{href:"#virtual-events",children:"here"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["Most importantly, beside providing custom action sequences to Controller blueprints, you can connect Controllers with ",(0,i.jsx)(t.a,{href:"#hooks",children:"Hooks"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"helper---last-controller-event-input",children:"Helper - Last Controller Event Input"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"helper_last_controller_event"})," (Helper - Last Controller Event) input is a generic ",(0,i.jsx)(t.code,{children:"input_text"})," entity which serves as a permanent storage area for a Controller automation. Currently the following information is stored:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Last Controller event"}),": the latest event which was fired by the controller."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Last triggered time"}),": the date/time the latest controller event was fired."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The stored info is used in many different ways to implement the blueprint's core functionality:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Action Recognition"}),": Some controllers use the info contained in the helper to recognize some actions. This varies between different controller models and integrations. Since natively the device doesn't allow to distinguish between certain events, the blueprint needs to store the last event, and take advantage of this information to identify subsequent actions."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Virtual Events"}),": The last controller event is used to implement virtual events. You can read more about them ",(0,i.jsx)(t.a,{href:"#virtual-events",children:"here"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["This field requires that you have an existing text helper. Therefore, before setting up the automation, manually create a brand new ",(0,i.jsx)(t.code,{children:"input_text"})," entity in your Home Assistant instance (e.g. from ",(0,i.jsx)(t.a,{href:"https://my.home-assistant.io/redirect/helpers/",children:"the Helpers configuration page"}),"), then provide it to the blueprint while configuring the automation."]}),"\n",(0,i.jsxs)(t.admonition,{type:"caution",children:[(0,i.jsx)(t.p,{children:"Make sure the text input is not altered by any other agents. The provided entity is used as a permanent storage area for the controller automation; any change to its state not carried out by the respective automation could lead to inconsistencies and unexpected behaviour."}),(0,i.jsxs)(t.p,{children:["Therefore, you should create ",(0,i.jsx)(t.strong,{children:"a separate text input for each Controller blueprint"})," you're configuring."]})]}),"\n",(0,i.jsx)(t.h3,{id:"virtual-events",children:"Virtual Events"}),"\n",(0,i.jsxs)(t.p,{children:["Virtual events are particular events which are not natively exposed by the controller itself. They're instead generated by the blueprint, which derives them from the incoming RAW controller events and by using the ",(0,i.jsx)(t.code,{children:"helper_last_controller_event"})," input and additional helpers."]}),"\n",(0,i.jsx)(t.p,{children:"Controllers, depending on the device model and functionality, currently support the following virtual events:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Virtual button double press"}),":"]}),"\n",(0,i.jsxs)(t.p,{children:["Implemented by relying on the ",(0,i.jsx)(t.code,{children:"helper_last_controller_event"})," input, used to store the last short press event, and a delay (specified with the ",(0,i.jsx)(t.code,{children:"helper_double_press_delay"})," input), which represents the maximum time gap between the first and second short press required to trigger the virtual double press."]}),"\n",(0,i.jsx)(t.p,{children:"When double press events are enabled for a specific button, clicking the button results in the automation first waiting for the second button press, then, if none is received within the provided delay, executing the short press action."}),"\n",(0,i.jsx)(t.p,{children:"If double press events are disabled for a specific button, the corresponding single press action will be executed immediately when the button is pressed."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"Such events can introduce some delay in the automation, therefore they can be disabled when not needed, thanks to a dedicated blueprint input."})}),"\n",(0,i.jsx)(t.h2,{id:"hooks",children:"Hooks"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Hooks"})," are blueprints which seamlessly integrate with ",(0,i.jsx)(t.a,{href:"#controllers",children:"Controllers"})," to enable control of lights, media players, covers and much more, without you ever writing a single line of code."]}),"\n",(0,i.jsx)(t.p,{children:"While Controllers are responsible for integrating the hardware and exposing an abstract interface to the user, Hooks can, as the name suggests, link to this interface and listen for events fired by a Controller. With the received events, Hooks take care of providing the actual control functionality for common use cases (eg. controlling a Media Player)."}),"\n",(0,i.jsx)(t.h2,{id:"how-to-build-a-controller-based-automation",children:"How to build a controller-based automation"}),"\n",(0,i.jsx)(t.h3,{id:"basic-usage-controller-with-custom-actions",children:"Basic Usage: Controller with custom actions"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Basic Usage: Controller with custom actions",src:n(5993).A+"",width:"1512",height:"1134"})}),"\n",(0,i.jsx)(t.p,{children:"The simplest use case for such blueprints consists in creating an entirely custom controller-based automation, which can be done by using only a Controller blueprint."}),"\n",(0,i.jsxs)(t.p,{children:["When setting up an automation with a Controller blueprint, you may be asked to select the integration used to connect the controller to Home Assistant, and the ",(0,i.jsx)(t.code,{children:"device"})," (depending on the integration) representing the Controller. You can then specify a sequence of actions for each of the events the controller exposes."]}),"\n",(0,i.jsx)(t.p,{children:"Each time an event is fired by the controller (eg. button press) the automation will run the provided custom action corresponding to that specific event."}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"Even in this simple scenario, you can still benefit from most of the features of the ecosystem: the blueprint will take care of handling the RAW events fired by the controller, as well as providing virtual events (eg. double clicks) not natively exposed by the controller."})}),"\n",(0,i.jsx)(t.h3,{id:"controller-and-hook",children:"Controller and Hook"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Controller and Hook",src:n(340).A+"",width:"1134",height:"1134"})}),"\n",(0,i.jsxs)(t.p,{children:["If you want to build a controller-based automation with Hooks, first create an automation with a Controller blueprint. You can then build an automation with the desired Hook blueprint, ",(0,i.jsxs)(t.strong,{children:["making sure that you provide the same controller ",(0,i.jsx)(t.code,{children:"device"})," used in the corresponding Controller blueprint"]}),". This key step will link the two automations and ensure the Hook will respond to events fired by the Controller."]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"Please note that not all controllers might be used with each of the available Hooks. Check out the Hook documentation for the list of supported controllers for that specific Hook."})}),"\n",(0,i.jsx)(t.h3,{id:"controller-and-hook--custom-actions",children:"Controller and Hook + Custom actions"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Controller and Hook + Custom actions",src:n(8662).A+"",width:"1512",height:"1134"})}),"\n",(0,i.jsx)(t.p,{children:"If you need to customize certain actions or extend a Hook functionality, you can also provide custom actions to the Controller blueprint, which will be run when a certain event is raised."}),"\n",(0,i.jsx)(t.h3,{id:"controller-with-multiple-hooks",children:"Controller with multiple Hooks"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Controller with multiple Hooks",src:n(600).A+"",width:"1890",height:"945"})}),"\n",(0,i.jsx)(t.p,{children:"For more flexibility, you can link multiple Hooks to the same Controller: just create a Controller automation, then build as many Hook automations as needed."}),"\n",(0,i.jsx)(t.p,{children:"This might be useful when you'd like to control multiple devices with the same controller (eg. multiple media players or lights) without relying on Home Assistant groups."}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.h3,{id:"control-a-media-player-with-an-ikea-e1743",children:"Control a media player with an IKEA E1743"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"# Controller automation: integrate the IKEA E1743\n- alias: Controller - IKEA E1743 Kitchen\n  description: ''\n  use_blueprint:\n    path: EPMatt/ikea_e1743.yaml\n    input:\n      integration: Zigbee2MQTT\n      controller_device: IKEA E1743 Kitchen\n      helper_last_controller_event: input_text.ikea_e1743_helper\n      button_up_double_press: true\n      button_down_double_press: true\n\n# Hook automation: Link the media player with the Controller\n- alias: Hook - Control Kitchen Media Player with E1743\n  description: ''\n  use_blueprint:\n    path: EPMatt/media_player.yaml\n    input:\n      # Provide the same value used in the Controller automation\n      # This ensures this automation will catch events fired by the E1743\n      controller_device: IKEA E1743 Kitchen\n      controller_model: IKEA E1743 On/Off Switch\n      media_player: media_player.kitchen\n"})}),"\n",(0,i.jsx)(t.h3,{id:"light-control-with-an-ikea-e1810--activate-scene-with-double-click",children:"Light control with an IKEA E1810 + activate scene with double click"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"# Controller automation: integrate the IKEA E1810\n- alias: Controller - IKEA E1810 Living Room\n  description: ''\n  use_blueprint:\n    path: EPMatt/ikea_e1524_e1810.yaml\n    input:\n      integration: Zigbee2MQTT\n      controller_device: IKEA E1810 Living Room\n      # Example of custom action\n      # activate a scene when double clicking the center button\n      action_button_center_double:\n        - scene: scene.cinema_mode\n\n# Hook automation: link the light with the Controller\n- alias: Hook - Control living room lights with IKEA E1810\n  description: ''\n  use_blueprint:\n    path: EPMatt/light.yaml\n    input:\n      light_color_mode: RGB\n      # Provide the same value used in the Controller automation\n      # This ensures this automation will catch events fired by the E1810\n      controller_device: IKEA E1810 Living Room\n      controller_model: IKEA E1524/E1810 5-Button remote\n      light: light.livingroom_ceiling\n"})}),"\n",(0,i.jsx)(t.h2,{id:"how-does-it-work",children:"How does it work"}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"This section discusses the communication and inner implementation of Controllers and Hooks. You don't need to read or know it to properly use these blueprints."})}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"caution",children:(0,i.jsx)(t.p,{children:"This documentation section is currently under review."})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Under the hood",src:n(8199).A+"",width:"1323",height:"1134"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},340:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/awesome-ha-blueprints-01-ad3cf5c209ab4b8b8f8eeada431fa2ec.svg"},8199:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/awesome-ha-blueprints-02-e123961dd84b35349d592fd337ceb86f.svg"},8662:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/awesome-ha-blueprints-03-c4a51232a4987094ff39f2762dad17f5.svg"},5993:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/awesome-ha-blueprints-04-c5b0817510f4c235c1799a64482ed849.svg"},600:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/awesome-ha-blueprints-05-e7fe5786c03c1b4fcd7965edcf353e72.svg"},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var o=n(6540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);